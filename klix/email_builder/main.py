def build_email_for_lead(lead: dict) -> dict:
    """
    Return a dict with at least 'subject' and 'body' keys.
    'lead' is a row mapping with keys like: id, email, company, source, status, etc.
    """
    email = lead.get("email") or ""
    company = (lead.get("company") or "").strip()
    local = (email.split("@", 1)[0] or "there").replace(".", " ").title()

    subject = f"{company or local}: quick idea to boost inquiries"

    body = (
        f"Hi {local},\n\n"
        "I’m testing our Klix pipeline end-to-end. "
        "This is a friendly message generated by the minimal builder.\n\n"
        "If you received this, the builder → queue → sender path works.\n\n"
        "— Klix"
    )

    # Return ONLY what the flow needs; it already decides send_type & status.
    return {"subject": subject, "body": body}
